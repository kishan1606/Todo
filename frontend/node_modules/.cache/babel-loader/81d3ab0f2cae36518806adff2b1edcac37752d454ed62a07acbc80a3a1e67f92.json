{"ast":null,"code":"function Validation(values) {\n  let error = {};\n\n  // const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^.{9,}$/;\n\n  // if (values.email === \"\") {\n  //   error.email = \"Name should not be empty\";\n  // } else if (!email_pattern.test(values.email)) {\n  //   error.email = \"Email must be in format a-z@a-z.com\";\n  // } else {\n  //   error.email = \"\";\n  // }\n\n  if (values.username === \"\") {\n    error.username = \"Username should not be empty\";\n  } else {\n    error.username = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password should atleast 8 character\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","password_pattern","username","password","test","_c","$RefreshReg$"],"sources":["C:/Users/patel/Desktop/angular/React/todo/frontend/src/login/LoginValidation.jsx"],"sourcesContent":["function Validation(values) {\r\n  let error = {};\r\n\r\n  // const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  const password_pattern = /^.{9,}$/;\r\n\r\n  // if (values.email === \"\") {\r\n  //   error.email = \"Name should not be empty\";\r\n  // } else if (!email_pattern.test(values.email)) {\r\n  //   error.email = \"Email must be in format a-z@a-z.com\";\r\n  // } else {\r\n  //   error.email = \"\";\r\n  // }\r\n\r\n  if (values.username === \"\") {\r\n    error.username = \"Username should not be empty\";\r\n  } else {\r\n    error.username = \"\";\r\n  }\r\n\r\n  if (values.password === \"\") {\r\n    error.password = \"Password should not be empty\";\r\n  } else if (!password_pattern.test(values.password)) {\r\n    error.password = \"Password should atleast 8 character\";\r\n  } else {\r\n    error.password = \"\";\r\n  }\r\n  return error;\r\n}\r\nexport default Validation;\r\n"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EAC1B,IAAIC,KAAK,GAAG,CAAC,CAAC;;EAEd;EACA,MAAMC,gBAAgB,GAAG,SAAS;;EAElC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIF,MAAM,CAACG,QAAQ,KAAK,EAAE,EAAE;IAC1BF,KAAK,CAACE,QAAQ,GAAG,8BAA8B;EACjD,CAAC,MAAM;IACLF,KAAK,CAACE,QAAQ,GAAG,EAAE;EACrB;EAEA,IAAIH,MAAM,CAACI,QAAQ,KAAK,EAAE,EAAE;IAC1BH,KAAK,CAACG,QAAQ,GAAG,8BAA8B;EACjD,CAAC,MAAM,IAAI,CAACF,gBAAgB,CAACG,IAAI,CAACL,MAAM,CAACI,QAAQ,CAAC,EAAE;IAClDH,KAAK,CAACG,QAAQ,GAAG,qCAAqC;EACxD,CAAC,MAAM;IACLH,KAAK,CAACG,QAAQ,GAAG,EAAE;EACrB;EACA,OAAOH,KAAK;AACd;AAACK,EAAA,GA5BQP,UAAU;AA6BnB,eAAeA,UAAU;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}